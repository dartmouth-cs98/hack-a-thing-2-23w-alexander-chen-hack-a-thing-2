{"ast":null,"code":"var _jsxFileName = \"/Users/alex/sources/hack-a-thing-2-23w-alexander-chen-hack-a-thing-2/app/src/App.tsx\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: post,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\n// function post(): Promise<any> {\n//   return fetch(\"http://127.0.0.1:5000\", {\n//     method: \"POST\",\n//     // mode: \"no-cors\", // sending video\n//     headers: {\n//       file: \"@/Users/alex/sources/hack-a-thing-2-23w-alexander-chen-hack-a-thing-2/server/files/example.mp4\",\n//       accept: \"multipart/form-data\",\n//       \"access-control-allow-methods\": \"POST\",\n//       \"access-control-allow-origin\": \"*\",\n//     },\n//   })\n//     .then((response) => {\n//       console.log(response);\n//       return response;\n//     })\n//     .then((response) => response.json()) // Parse the response in JSON\n//     .then((response) => {\n//       console.log(response);\n//       return response as StatusData; // Cast the response type to our interface\n//     });\n// }\n// updating a post\nconst updatePost = async (req, res, next) => {\n  var _req$body$title, _req$body$body;\n  // get the post id from the req.params\n  let id = req.params.id;\n  // get the data from req.body\n  let title = (_req$body$title = req.body.title) !== null && _req$body$title !== void 0 ? _req$body$title : null;\n  let body = (_req$body$body = req.body.body) !== null && _req$body$body !== void 0 ? _req$body$body : null;\n  // update the post\n  let response = await axios.put(`https://jsonplaceholder.typicode.com/posts/${id}`, {\n    ...(title && {\n      title\n    }),\n    ...(body && {\n      body\n    })\n  });\n  // return response\n  return res.status(200).json({\n    message: response.data\n  });\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","logo","App","post","updatePost","req","res","next","id","params","title","body","response","axios","put","status","json","message","data"],"sources":["/Users/alex/sources/hack-a-thing-2-23w-alexander-chen-hack-a-thing-2/app/src/App.tsx"],"sourcesContent":["import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <input type=\"file\" />\n        <button onClick={post}>Upload</button>\n      </header>\n    </div>\n  );\n}\n\ninterface StatusData {\n  status: string;\n}\n\n// function post(): Promise<any> {\n//   return fetch(\"http://127.0.0.1:5000\", {\n//     method: \"POST\",\n//     // mode: \"no-cors\", // sending video\n//     headers: {\n//       file: \"@/Users/alex/sources/hack-a-thing-2-23w-alexander-chen-hack-a-thing-2/server/files/example.mp4\",\n//       accept: \"multipart/form-data\",\n//       \"access-control-allow-methods\": \"POST\",\n//       \"access-control-allow-origin\": \"*\",\n//     },\n//   })\n//     .then((response) => {\n//       console.log(response);\n//       return response;\n//     })\n//     .then((response) => response.json()) // Parse the response in JSON\n//     .then((response) => {\n//       console.log(response);\n//       return response as StatusData; // Cast the response type to our interface\n//     });\n// }\n// updating a post\nconst updatePost = async (req: Request, res: Response, next: NextFunction) => {\n  // get the post id from the req.params\n  let id: string = req.params.id;\n  // get the data from req.body\n  let title: string = req.body.title ?? null;\n  let body: string = req.body.body ?? null;\n  // update the post\n  let response: AxiosResponse = await axios.put(\n    `https://jsonplaceholder.typicode.com/posts/${id}`,\n    {\n      ...(title && { title }),\n      ...(body && { body }),\n    }\n  );\n  // return response\n  return res.status(200).json({\n    message: response.data,\n  });\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EACb,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAQ,SAAS,EAAC,YAAY;MAAA,wBAC5B;QAAK,GAAG,EAAED,IAAK;QAAC,SAAS,EAAC,UAAU;QAAC,GAAG,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eAClD;QAAO,IAAI,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACrB;QAAQ,OAAO,EAAEE,IAAK;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAC/B;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,KAVQD,GAAG;AAgBZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,UAAU,GAAG,OAAOC,GAAY,EAAEC,GAAa,EAAEC,IAAkB,KAAK;EAAA;EAC5E;EACA,IAAIC,EAAU,GAAGH,GAAG,CAACI,MAAM,CAACD,EAAE;EAC9B;EACA,IAAIE,KAAa,sBAAGL,GAAG,CAACM,IAAI,CAACD,KAAK,6DAAI,IAAI;EAC1C,IAAIC,IAAY,qBAAGN,GAAG,CAACM,IAAI,CAACA,IAAI,2DAAI,IAAI;EACxC;EACA,IAAIC,QAAuB,GAAG,MAAMC,KAAK,CAACC,GAAG,CAC1C,8CAA6CN,EAAG,EAAC,EAClD;IACE,IAAIE,KAAK,IAAI;MAAEA;IAAM,CAAC,CAAC;IACvB,IAAIC,IAAI,IAAI;MAAEA;IAAK,CAAC;EACtB,CAAC,CACF;EACD;EACA,OAAOL,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;IAC1BC,OAAO,EAAEL,QAAQ,CAACM;EACpB,CAAC,CAAC;AACJ,CAAC;AAED,eAAehB,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}